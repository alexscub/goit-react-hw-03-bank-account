{"version":3,"sources":["components/Dashboard/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Controls/Controls.module.css","components/Dashboard/Controls/Controls.jsx","components/Dashboard/Balance/Balance.jsx","components/Dashboard/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.js","components/Dashboard/Balance/Balance.module.css"],"names":["module","exports","Controls","initialState","amount","state","handleChange","e","setState","target","value","this","handleTransaction","props","handleclick","transaction","name","className","styles","controls","form","input","type","onChange","button","onClick","Component","Balance","income","expenses","balance","balanceElement","role","aria-label","TransactionHistory","items","transactionsHistory","map","item","key","id","date","Dashboard","transactions","dateOptions","hour","minute","second","hour12","notify","message","toast","makeTransaction","Date","toLocaleDateString","shortid","generate","getBalance","getSumFromTransactions","newTransaction","prev","filter","reduce","acc","curSum","savedTransactions","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","length","App","ReactDOM","render","document","getElementById"],"mappings":"4IACAA,EAAOC,QAAU,CAAC,oBAAsB,kD,kBCAxCD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,yBAAyB,MAAQ,0B,kxBC4DnFC,E,2MAxDbC,aAAe,CACbC,OAAQ,I,EAGVC,M,KACK,EAAKF,c,EAGVG,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZJ,OAAQG,EAAEE,OAAOC,S,wEAIX,IAAD,OACCN,EAAWO,KAAKN,MAAhBD,OACAQ,EAAsBD,KAAKE,MAA3BD,kBACFE,EAAc,SAAAP,GAClB,IAAMQ,EAAcR,EAAEE,OAAOO,KAC7BJ,EAAkBG,GAAcX,GAChC,EAAKI,SAAL,KACK,EAAKL,gBAGZ,OACE,6BAASc,UAAWC,IAAOC,UACzB,0BAAMF,UAAWC,IAAOE,MACtB,2BACEH,UAAWC,IAAOG,MAClBC,KAAK,SACLN,KAAK,SACLN,MAAON,EACPmB,SAAUZ,KAAKL,eAEjB,4BACEW,UAAWC,IAAOM,OAClBF,KAAK,SACLG,QAASX,EACTE,KAAK,WAJP,WAQA,4BACEC,UAAWC,IAAOM,OAClBF,KAAK,SACLG,QAASX,EACTE,KAAK,YAJP,kB,GA3CaU,a,gBCyBRC,EAzBC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACnBC,EAAUF,EAASC,EACzB,OACE,6BAASZ,UAAWC,IAAOY,SACzB,0BAAMb,UAAWC,IAAOa,gBACtB,0BAAMC,KAAK,MAAMC,aAAW,WAA5B,gBAGCL,EAJH,KAMA,0BAAMX,UAAWC,IAAOa,gBACtB,0BAAMC,KAAK,MAAMC,aAAW,WAA5B,gBAGCJ,EAJH,KAMA,0BAAMZ,UAAWC,IAAOa,gBAAxB,YAAkDD,EAAlD,O,iBCiBSI,EAjCY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OACE,2BAAOlB,UAAWC,IAAOkB,qBACvB,+BACE,4BACE,2CACA,sCACA,sCAGJ,+BACGD,EAAME,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,EAAKE,IACZ,4BAAKF,EAAKhB,MACV,4BAAKgB,EAAKlC,OAAV,KACA,4BAAKkC,EAAKG,a,kOCoFPC,E,2MA9FbvC,aAAe,CACbwC,aAAc,I,EAGhBtC,M,6VACK,EAAKF,c,EAGVyC,YAAc,CACZC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,QAAQ,G,EAmBVC,OAAS,SAAAC,GAAO,OAAIC,YAAMD,I,EAE1BE,gBAAkB,SAAC9B,EAAMlB,GAOvB,MANuB,CACrBqC,MAAM,IAAIY,MAAOC,mBAAmB,QAAS,EAAKV,aAClDxC,SACAkB,OACAkB,GAAIe,IAAQC,a,EAKhBC,WAAa,WAAO,IACVd,EAAiB,EAAKtC,MAAtBsC,aACR,OACE,EAAKe,uBAAuBf,EAAc,WAC1C,EAAKe,uBAAuBf,EAAc,a,EAI9C/B,kBAAoB,SAACG,EAAaX,GAChC,GAAIA,EAAS,EACX,EAAK6C,OAAO,oLAGd,GAAK7C,EAIL,GAAoB,aAAhBW,GAA8BX,EAAS,EAAKqD,aAC9C,EAAKR,OAAO,ySADd,CAIA,IAAMU,EAAiB,EAAKP,gBAAgBrC,EAAaX,GACzD,EAAKI,UAAS,SAAAoD,GAAI,MAAK,CACrBjB,aAAa,GAAD,mBAAMiB,EAAKjB,cAAX,CAAyBgB,aATrC,EAAKV,OAAO,gN,EAahBS,uBAAyB,SAACf,EAAcrB,GAAf,OACvBqB,EACGkB,QAAO,SAAA9C,GAAW,OAAIA,EAAYO,OAASA,KAC3CwC,QAAO,SAACC,EAAKhD,GACZ,IAAIiD,EAASD,EAEb,OADAC,GAAUjD,EAAYX,SAErB,I,mFA7DL,IAAM6D,EAAoBC,aAAaC,QAAQ,qBAC3CF,GACFtD,KAAKH,SAAS,CACZmC,aAAcyB,KAAKC,MAAMJ,O,yCAKZK,EAAWC,GAAY,IAChC5B,EAAiBhC,KAAKN,MAAtBsC,aACJ4B,EAAU5B,eAAiBA,GAC7BuB,aAAaM,QAAQ,oBAAqBJ,KAAKK,UAAU9B,M,+BAoDnD,IACAA,EAAiBhC,KAAKN,MAAtBsC,aACFf,EAASjB,KAAK+C,uBAAuBf,EAAc,WACnDd,EAAWlB,KAAK+C,uBAAuBf,EAAc,YAC3D,OACE,6BACE,kBAAC,IAAD,MACA,kBAAC,EAAD,CAAU/B,kBAAmBD,KAAKC,oBAClC,kBAAC,EAAD,CAASgB,OAAQA,EAAQC,SAAUA,MAChCc,EAAa+B,QAAU,kBAAC,EAAD,CAAoBvC,MAAOQ,S,GAzFrCjB,aCHTiD,EAFH,kBAAM,kBAAC,EAAD,OCClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCHjD/E,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,mC","file":"static/js/main.f75a8295.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionsHistory\":\"TransactionHistory_transactionsHistory__2D88B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__1gVHM\",\"button\":\"Controls_button__pdL5J\",\"input\":\"Controls_input__onb7x\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\n\nclass Controls extends Component {\n  initialState = {\n    amount: '',\n  };\n\n  state = {\n    ...this.initialState,\n  };\n\n  handleChange = e => {\n    this.setState({\n      amount: e.target.value,\n    });\n  };\n\n  render() {\n    const { amount } = this.state;\n    const { handleTransaction } = this.props;\n    const handleclick = e => {\n      const transaction = e.target.name;\n      handleTransaction(transaction, +amount);\n      this.setState({\n        ...this.initialState,\n      });\n    };\n    return (\n      <section className={styles.controls}>\n        <form className={styles.form}>\n          <input\n            className={styles.input}\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            onChange={this.handleChange}\n          />\n          <button\n            className={styles.button}\n            type=\"button\"\n            onClick={handleclick}\n            name=\"Deposit\"\n          >\n            Deposit\n          </button>\n          <button\n            className={styles.button}\n            type=\"button\"\n            onClick={handleclick}\n            name=\"Withdraw\"\n          >\n            Withdraw\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default Controls;\nControls.propTypes = {\n  handleTransaction: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ income, expenses }) => {\n  const balance = income - expenses;\n  return (\n    <section className={styles.balance}>\n      <span className={styles.balanceElement}>\n        <span role=\"img\" aria-label=\"Snowman\">\n          ⬆️\n        </span>\n        {income}$\n      </span>\n      <span className={styles.balanceElement}>\n        <span role=\"img\" aria-label=\"Snowman\">\n          ⬇️\n        </span>\n        {expenses}$\n      </span>\n      <span className={styles.balanceElement}>Balance: {balance}$</span>\n    </section>\n  );\n};\nBalance.propTypes = {\n  income: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={styles.transactionsHistory}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}$</td>\n            <td>{item.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.oneOf(['Deposit', 'Withdraw']).isRequired,\n      id: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Controls from './Controls/Controls';\nimport Balance from './Balance/Balance';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nclass Dashboard extends Component {\n  initialState = {\n    transactions: [],\n  };\n\n  state = {\n    ...this.initialState,\n  };\n\n  dateOptions = {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hour12: false,\n  };\n\n  componentDidMount() {\n    const savedTransactions = localStorage.getItem('savedTransactions');\n    if (savedTransactions) {\n      this.setState({\n        transactions: JSON.parse(savedTransactions),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions } = this.state;\n    if (prevState.transactions !== transactions) {\n      localStorage.setItem('savedTransactions', JSON.stringify(transactions));\n    }\n  }\n\n  notify = message => toast(message);\n\n  makeTransaction = (type, amount) => {\n    const newTransaction = {\n      date: new Date().toLocaleDateString('en-US', this.dateOptions),\n      amount,\n      type,\n      id: shortid.generate(),\n    };\n    return newTransaction;\n  };\n\n  getBalance = () => {\n    const { transactions } = this.state;\n    return (\n      this.getSumFromTransactions(transactions, 'Deposit') -\n      this.getSumFromTransactions(transactions, 'Withdraw')\n    );\n  };\n\n  handleTransaction = (transaction, amount) => {\n    if (amount < 0) {\n      this.notify('Введите положительное значение!');\n      return;\n    }\n    if (!amount) {\n      this.notify('Введите сумму для проведения операции!');\n      return;\n    }\n    if (transaction === 'Withdraw' && amount > this.getBalance()) {\n      this.notify('На счету недостаточно средств для проведения операции!');\n      return;\n    }\n    const newTransaction = this.makeTransaction(transaction, amount);\n    this.setState(prev => ({\n      transactions: [...prev.transactions, newTransaction],\n    }));\n  };\n\n  getSumFromTransactions = (transactions, type) =>\n    transactions\n      .filter(transaction => transaction.type === type)\n      .reduce((acc, transaction) => {\n        let curSum = acc;\n        curSum += transaction.amount;\n        return curSum;\n      }, 0);\n\n  render() {\n    const { transactions } = this.state;\n    const income = this.getSumFromTransactions(transactions, 'Deposit');\n    const expenses = this.getSumFromTransactions(transactions, 'Withdraw');\n    return (\n      <div>\n        <ToastContainer />\n        <Controls handleTransaction={this.handleTransaction} />\n        <Balance income={income} expenses={expenses} />\n        {!!transactions.length && <TransactionHistory items={transactions} />}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Dashboard from '../Dashboard/Dashboard';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__qBpEY\",\"balanceElement\":\"Balance_balanceElement__2n3GB\"};"],"sourceRoot":""}